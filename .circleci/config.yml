version: 2.1
orbs:
  node: circleci/node@2.0.3
jobs:
  back-test:
    executor:
      name: node/default
      tag: '13.9'
    parameters:
      cache-version:
        default: v2
        type: string
    steps:
      - checkout
      - restore_cache:
          key: back-dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: back-dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: npm test
  front-test:
    docker:
      - image: circleci/node:13
        environment:
          NODE_ENV: development # Only needed if puppeteer is in `devDependencies`
    parameters:
      cache-version:
        default: v2
        type: string
    steps:
      - checkout
      - run:
          name: "Pull submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - restore_cache:
          key: full-dependency-cache-{{ checksum "package-lock.json" }}-{{ checksum "./deps/cis-front/package-lock.json" }}
      - run: 
          name: "Build and start back-end server"
          command: |
            npm install
            npx tsc
            npx typeorm schema:sync -c dev-connection
            npx typeorm migration:run -c dev-connection
            npm start
          background: true
      - run: 
          name: "Install packages of cis-front"
          command: |
            cd ./deps/cis-front
            npm install
      - save_cache:
          key: full-dependency-cache-{{ checksum "package-lock.json" }}-{{ checksum "./deps/cis-front/package-lock.json" }}
          paths:
            - ./node_modules
            - ./deps/cis-front/node_modules
      - run:
          name: "Start front-end dev server"
          environment:
            SKIP_PREFLIGHT_CHECK: "true" # Skip checking deps for CRA
          command: |
            cd ./deps/cis-front
            npm start
          background: true
      - run:
          name: "Waiting when back-end server start listening"
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=1 --read-timeout=40 --timeout=30 -t 20 http://localhost:8080/api/v1
            :
      - run:
          name: "Waiting when front-end dev server start listening"
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=1 --read-timeout=40 --timeout=30 -t 20 http://localhost:3000
            :
      - run:
          name: "Start testing of front-end"
          environment:
            SKIP_PREFLIGHT_CHECK: "true" # Skip checking deps for CRA
          command: |
            cd ./deps/cis-front
            npm test -- --maxWorkers=2 --forceExit

workflows:
    build-and-test:
      jobs:
        - back-test
        - front-test